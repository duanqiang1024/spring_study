<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.hillstone.service.UserServiceImpl"/>
    <bean id="log" class="com.hillstone.log.log"/>
    <bean id="afterLog" class="com.hillstone.log.AfterLog"/>


    <!--方式一：使用原生的Spring API接口-->
    <!--配置aop,需要导入aop的约束-->
    <!--<aop:config>
        &lt;!&ndash;切入点：express:表达式，execution(要执行的位置！ * * * * *)&ndash;&gt;
        &lt;!&ndash;可以配置多个切入点&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.hillstone.service.UserServiceImpl.*(..))"/>
        <aop:pointcut id="pointcut1" expression="execution(* com.hillstone.service.UserServiceImpl.*(..))"/>

         &lt;!&ndash;执行环绕增加&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>&lt;!&ndash;说明把log这个类切入到引用的pointcut切入点的方法上&ndash;&gt;
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->

    <!--方式二：自定义类-->
    <!--注册bean-->
    <!--    <bean id="diy" class="com.hillstone.diy.DiyPointCut"/>
        <aop:config>
           &lt;!&ndash; 自定义切面，ref要引用的类&ndash;&gt;
            <aop:aspect ref ="diy">
                &lt;!&ndash;切入点&ndash;&gt;
                <aop:pointcut id="point" expression="execution(* com.hillstone.service.UserServiceImpl.*(..))"/>
                &lt;!&ndash;通知&ndash;&gt;
                <aop:before method="before" pointcut-ref="point"/>
                <aop:after method="before" pointcut-ref="point"/>
            </aop:aspect>
        </aop:config>-->

    <!--方式三：使用注解实现-->
    <bean id="annotationPointCut" class="com.hillstone.anno.AnnotationPointCut"/>
    <!--开启注解支持 JDK(默认  proxy-target-class="false")  cglib(proxy-target-class="true")-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


</beans>